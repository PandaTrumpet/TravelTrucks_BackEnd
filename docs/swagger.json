{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Students app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of AquaTrack app"
  },
  "tags": [
    {
      "name": "Waters",
      "description": "Operations about water."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    }
  ],
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/water/{id}": {
      "delete": {
        "tags": [
          "Waters"
        ],
        "summary": "Delete water record by id",
        "operationId": "deleteWater",
        "description": "Delete a water record by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "63f12345e4567ab89cde9012"
            },
            "description": "The ID of the water record to be deleted"
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted the water record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 204
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1water~1%7Bid%7D/get/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1water/get/responses/401"
          },
          "404": {
            "$ref": "#/paths/~1water~1%7Bid%7D/get/responses/404"
          }
        }
      },
      "get": {
        "tags": [
          "Waters"
        ],
        "summary": "Get water by id",
        "operationId": "getWater",
        "description": "Get water by id",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get water by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found water with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/paths/~1water/post/responses/201/content/application~1json/schema/properties/data"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid Id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Invalid Id"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Invalid Water ID format"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1water/get/responses/401"
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Water with id 65ca67e7ae7f10c88b598384 not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Waters"
        ],
        "summary": "Update water record by id",
        "operationId": "updateWater",
        "description": "Update water record by providing the id and new data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            },
            "description": "The unique identifier of the water record to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "volume": {
                    "type": "number",
                    "description": "New volume of water",
                    "example": 750
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "New date for the water record (optional)",
                    "example": "2024-12-31T12:11"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated water record",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated water record with id 65ca67e7ae7f10c88b598384!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "description": "Water's id",
                          "type": "string",
                          "example": "65e4decdd286b30065d54af9"
                        },
                        "date": {
                          "description": "Water's date",
                          "type": "string",
                          "example": "2024-12-23T20:23"
                        },
                        "volume": {
                          "description": "Water's volume. Should be minimum 50",
                          "type": "number",
                          "example": 50
                        },
                        "userId": {
                          "description": "Water's user id",
                          "type": "string",
                          "example": "65e4decdd286b30065d54af9"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/paths/~1water/post/responses/400"
          },
          "401": {
            "$ref": "#/paths/~1water/get/responses/401"
          },
          "404": {
            "$ref": "#/paths/~1water~1%7Bid%7D/get/responses/404"
          }
        }
      }
    },
    "/water": {
      "get": {
        "tags": [
          "Waters"
        ],
        "summary": "Get all water records",
        "operationId": "getAllWater",
        "description": "Retrieve all water records from the system",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved all water records",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully fetched all water records."
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "$ref": "#/paths/~1water/post/responses/201/content/application~1json/schema/properties/data"
                      },
                      "example": [
                        {
                          "_id": "63f12345e4567ab89cde9012",
                          "userId": "63f12345e4567ab89cde9012",
                          "date": "2024-12-29T20:24",
                          "volume": 500
                        },
                        {
                          "_id": "63f12345e4567ab89cde9013",
                          "userId": "63f12345e4567ab89cde9012",
                          "date": "2024-12-29T20:24",
                          "volume": 600
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "UnauthorizedError"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Access token expired"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Water not found"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Waters"
        ],
        "summary": "Create water",
        "operationId": "createWater",
        "description": "Create a water with payload",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "valume",
                  "date",
                  "userId"
                ],
                "properties": {
                  "valume": {
                    "description": "Water's valume",
                    "type": "number",
                    "example": 250
                  },
                  "date": {
                    "description": "Date of creating water",
                    "type": "string",
                    "example": "2024-12-23T13:25"
                  },
                  "userId": {
                    "description": "Water's user id",
                    "type": "string",
                    "example": "65e4decdd286b30065d54af9"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully created water!",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created water!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "date",
                        "volume",
                        "userId"
                      ],
                      "properties": {
                        "_id": {
                          "description": "Water's id",
                          "type": "string",
                          "example": "65e4decdd286b30065d54af9"
                        },
                        "date": {
                          "description": "Water's date",
                          "type": "string",
                          "example": "2024-12-23T20:23"
                        },
                        "volume": {
                          "description": "Water's volume. Should be minimum 50",
                          "type": "number",
                          "example": 50
                        },
                        "userId": {
                          "description": "Water's user id",
                          "type": "string",
                          "example": "65e4decdd286b30065d54af9"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "Bad Request"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "message"
                      ],
                      "properties": {
                        "message": {
                          "type": "string",
                          "example": "Invalid request parameters."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/paths/~1water/get/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}
