tags:
  - Auth
summary: User login
operationId: loginUser
description: Authenticate a user by providing email and password.
security:
  - bearerAuth: []
requestBody:
  required: true
  content:
    application/json:
      schema:
        type: object
        required:
          - email
          - password
        properties:
          email:
            type: string
            description: Email address of the user.
            example: "john.doe@example.com"
          password:
            type: string
            description: Password for the user account.
            example: "P@ssw0rd123"
responses:
  "200":
    description: Successfully authenticated the user.
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: "Successfully logged in."
            data:
              type: object
              properties:
                accessToken:
                  type: string
                  description: JWT token for authenticated user.
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"

                userData:
                  type: object
                  $ref: ../../components/schemas/auth.yaml
  "400":
    $ref: ../../components/responses/400.yaml
  "401":
    $ref: ../../components/responses/auth/401.yaml
  "404":
    $ref: ../../components/responses/auth/404.yaml
  "500":
    description: Internal server error.
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 500
            message:
              type: string
              example: "An unexpected error occurred."
